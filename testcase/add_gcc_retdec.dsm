;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;;
;; Decompilation date: 2024-06-15 15:35:31
;; Architecture: x86
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x1000 -- 0x101b
0x1000:   f3 0f 1e fa                  	endbr64 
0x1004:   48 83 ec 08                  	sub rsp, 8
0x1008:   48 8b 05 d9 2f 00 00         	mov rax, qword ptr [rip + 0x2fd9]
0x100f:   48 85 c0                     	test rax, rax
0x1012:   74 02                        	je 0x1016 <_init+0x16>
0x1014:   ff d0                        	call rax <__gmon_start__>
0x1016:   48 83 c4 08                  	add rsp, 8
0x101a:   c3                           	ret 
; section: .plt
; data inside code section at 0x1020 -- 0x1050
0x1020:   ff 35 92 2f 00 00 f2 ff  25 93 2f 00 00 0f 1f 00   |.5./....%./.....|
0x1030:   f3 0f 1e fa 68 00 00 00  00 f2 e9 e1 ff ff ff 90   |....h...........|
0x1040:   f3 0f 1e fa 68 01 00 00  00 f2 e9 d1 ff ff ff 90   |....h...........|
; section: .plt.got
; function: function_1050 at 0x1050 -- 0x105b
0x1050:   f3 0f 1e fa                  	endbr64 
0x1054:   f2 ff 25 9d 2f 00 00         	bnd jmp qword ptr [rip + 0x2f9d] <__cxa_finalize>
; data inside code section at 0x105b -- 0x1060
0x105b:   0f 1f 44 00 00                                     |..D..           |
; section: .plt.sec
; function: function_1060 at 0x1060 -- 0x106b
0x1060:   f3 0f 1e fa                  	endbr64 
0x1064:   f2 ff 25 5d 2f 00 00         	bnd jmp qword ptr [rip + 0x2f5d] <__stack_chk_fail>
; data inside code section at 0x106b -- 0x1070
0x106b:   0f 1f 44 00 00                                     |..D..           |
; function: function_1070 at 0x1070 -- 0x107b
0x1070:   f3 0f 1e fa                  	endbr64 
0x1074:   f2 ff 25 55 2f 00 00         	bnd jmp qword ptr [rip + 0x2f55] <printf>
; data inside code section at 0x107b -- 0x1080
0x107b:   0f 1f 44 00 00                                     |..D..           |
; section: .text
; function: _start at 0x1080 -- 0x10af
0x1080:   f3 0f 1e fa                  	endbr64 
0x1084:   31 ed                        	xor ebp, ebp
0x1086:   49 89 d1                     	mov r9, rdx
0x1089:   5e                           	pop rsi
0x108a:   48 89 e2                     	mov rdx, rsp
0x108d:   48 83 e4 f0                  	and rsp, 0xfffffffffffffff0
0x1091:   50                           	push rax
0x1092:   54                           	push rsp
0x1093:   4c 8d 05 f6 01 00 00         	lea r8, [rip + 0x1f6]
0x109a:   48 8d 0d 7f 01 00 00         	lea rcx, [rip + 0x17f]
0x10a1:   48 8d 3d e0 00 00 00         	lea rdi, [rip + 0xe0]
0x10a8:   ff 15 32 2f 00 00            	call qword ptr [rip + 0x2f32] <__libc_start_main>
0x10ae:   f4                           	hlt 
; data inside code section at 0x10af -- 0x10b0
0x10af:   90                                                 |.               |
; function: deregister_tm_clones at 0x10b0 -- 0x10d9
0x10b0:   48 8d 3d 59 2f 00 00         	lea rdi, [rip + 0x2f59]
0x10b7:   48 8d 05 52 2f 00 00         	lea rax, [rip + 0x2f52]
0x10be:   48 39 f8                     	cmp rax, rdi
0x10c1:   74 15                        	je 0x10d8 <deregister_tm_clones+0x28>
0x10c3:   48 8b 05 0e 2f 00 00         	mov rax, qword ptr [rip + 0x2f0e]
0x10ca:   48 85 c0                     	test rax, rax
0x10cd:   74 09                        	je 0x10d8 <deregister_tm_clones+0x28>
0x10cf:   ff e0                        	jmp rax <_ITM_deregisterTMCloneTable>
; data inside code section at 0x10d1 -- 0x10d8
0x10d1:   0f 1f 80 00 00 00 00                               |.......         |
0x10d8:   c3                           	ret 
; data inside code section at 0x10d9 -- 0x10e0
0x10d9:   0f 1f 80 00 00 00 00                               |.......         |
; function: register_tm_clones at 0x10e0 -- 0x1119
0x10e0:   48 8d 3d 29 2f 00 00         	lea rdi, [rip + 0x2f29]
0x10e7:   48 8d 35 22 2f 00 00         	lea rsi, [rip + 0x2f22]
0x10ee:   48 29 fe                     	sub rsi, rdi
0x10f1:   48 89 f0                     	mov rax, rsi
0x10f4:   48 c1 ee 3f                  	shr rsi, 0x3f
0x10f8:   48 c1 f8 03                  	sar rax, 3
0x10fc:   48 01 c6                     	add rsi, rax
0x10ff:   48 d1 fe                     	sar rsi, 1
0x1102:   74 14                        	je 0x1118 <register_tm_clones+0x38>
0x1104:   48 8b 05 e5 2e 00 00         	mov rax, qword ptr [rip + 0x2ee5]
0x110b:   48 85 c0                     	test rax, rax
0x110e:   74 08                        	je 0x1118 <register_tm_clones+0x38>
0x1110:   ff e0                        	jmp rax <_ITM_registerTMCloneTable>
; data inside code section at 0x1112 -- 0x1118
0x1112:   66 0f 1f 44 00 00                                  |f..D..          |
0x1118:   c3                           	ret 
; data inside code section at 0x1119 -- 0x1120
0x1119:   0f 1f 80 00 00 00 00                               |.......         |
; function: __do_global_dtors_aux at 0x1120 -- 0x1159
0x1120:   f3 0f 1e fa                  	endbr64 
0x1124:   80 3d e5 2e 00 00 00         	cmp byte ptr [rip + 0x2ee5], 0
0x112b:   75 2b                        	jne 0x1158 <__do_global_dtors_aux+0x38>
0x112d:   55                           	push rbp
0x112e:   48 83 3d c2 2e 00 00 00      	cmp qword ptr [rip + 0x2ec2], 0
0x1136:   48 89 e5                     	mov rbp, rsp
0x1139:   74 0c                        	je 0x1147 <__do_global_dtors_aux+0x27>
0x113b:   48 8b 3d c6 2e 00 00         	mov rdi, qword ptr [rip + 0x2ec6]
0x1142:   e8 09 ff ff ff               	call 0x1050 <__cxa_finalize>
0x1147:   e8 64 ff ff ff               	call 0x10b0 <deregister_tm_clones>
0x114c:   c6 05 bd 2e 00 00 01         	mov byte ptr [rip + 0x2ebd], 1
0x1153:   5d                           	pop rbp
0x1154:   c3                           	ret 
; data inside code section at 0x1155 -- 0x1158
0x1155:   0f 1f 00                                           |...             |
0x1158:   c3                           	ret 
; data inside code section at 0x1159 -- 0x1160
0x1159:   0f 1f 80 00 00 00 00                               |.......         |
; function: frame_dummy at 0x1160 -- 0x1169
0x1160:   f3 0f 1e fa                  	endbr64 
0x1164:   e9 77 ff ff ff               	jmp 0x10e0 <register_tm_clones>
; function: add at 0x1169 -- 0x1188
0x1169:   f3 0f 1e fa                  	endbr64 
0x116d:   55                           	push rbp
0x116e:   48 89 e5                     	mov rbp, rsp
0x1171:   48 89 7d f8                  	mov qword ptr [rbp - 8], rdi
0x1175:   89 f0                        	mov eax, esi
0x1177:   88 45 f4                     	mov byte ptr [rbp - 0xc], al
0x117a:   48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0x117e:   8b 10                        	mov edx, dword ptr [rax]
0x1180:   0f be 45 f4                  	movsx eax, byte ptr [rbp - 0xc]
0x1184:   01 d0                        	add eax, edx
0x1186:   5d                           	pop rbp
0x1187:   c3                           	ret 
; function: main at 0x1188 -- 0x1211
0x1188:   f3 0f 1e fa                  	endbr64 
0x118c:   55                           	push rbp
0x118d:   48 89 e5                     	mov rbp, rsp
0x1190:   48 83 ec 20                  	sub rsp, 0x20
0x1194:   64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0x119d:   48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0x11a1:   31 c0                        	xor eax, eax
0x11a3:   c7 45 e4 01 00 00 00         	mov dword ptr [rbp - 0x1c], 1
0x11aa:   c6 45 e3 02                  	mov byte ptr [rbp - 0x1d], 2
0x11ae:   0f be 55 e3                  	movsx edx, byte ptr [rbp - 0x1d]
0x11b2:   48 8d 45 e4                  	lea rax, [rbp - 0x1c]
0x11b6:   89 d6                        	mov esi, edx
0x11b8:   48 89 c7                     	mov rdi, rax
0x11bb:   e8 a9 ff ff ff               	call 0x1169 <add>
0x11c0:   89 45 e8                     	mov dword ptr [rbp - 0x18], eax
0x11c3:   48 8d 45 e4                  	lea rax, [rbp - 0x1c]
0x11c7:   48 89 45 f0                  	mov qword ptr [rbp - 0x10], rax
0x11cb:   0f be 55 e3                  	movsx edx, byte ptr [rbp - 0x1d]
0x11cf:   48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0x11d3:   89 d6                        	mov esi, edx
0x11d5:   48 89 c7                     	mov rdi, rax
0x11d8:   e8 8c ff ff ff               	call 0x1169 <add>
0x11dd:   89 45 ec                     	mov dword ptr [rbp - 0x14], eax
0x11e0:   8b 45 e8                     	mov eax, dword ptr [rbp - 0x18]
0x11e3:   89 c6                        	mov esi, eax
0x11e5:   48 8d 3d 18 0e 00 00         	lea rdi, [rip + 0xe18]
0x11ec:   b8 00 00 00 00               	mov eax, 0
0x11f1:   e8 7a fe ff ff               	call 0x1070 <printf>
0x11f6:   b8 00 00 00 00               	mov eax, 0
0x11fb:   48 8b 4d f8                  	mov rcx, qword ptr [rbp - 8]
0x11ff:   64 48 33 0c 25 28 00 00 00   	xor rcx, qword ptr fs:[0x28]
0x1208:   74 05                        	je 0x120f <main+0x87>
0x120a:   e8 51 fe ff ff               	call 0x1060 <__stack_chk_fail>
0x120f:   c9                           	leave 
0x1210:   c3                           	ret 
; data inside code section at 0x1211 -- 0x1220
0x1211:   66 2e 0f 1f 84 00 00 00  00 00 0f 1f 44 00 00      |f...........D.. |
; function: __libc_csu_init at 0x1220 -- 0x1285
0x1220:   f3 0f 1e fa                  	endbr64 
0x1224:   41 57                        	push r15
0x1226:   4c 8d 3d 83 2b 00 00         	lea r15, [rip + 0x2b83]
0x122d:   41 56                        	push r14
0x122f:   49 89 d6                     	mov r14, rdx
0x1232:   41 55                        	push r13
0x1234:   49 89 f5                     	mov r13, rsi
0x1237:   41 54                        	push r12
0x1239:   41 89 fc                     	mov r12d, edi
0x123c:   55                           	push rbp
0x123d:   48 8d 2d 74 2b 00 00         	lea rbp, [rip + 0x2b74]
0x1244:   53                           	push rbx
0x1245:   4c 29 fd                     	sub rbp, r15
0x1248:   48 83 ec 08                  	sub rsp, 8
0x124c:   e8 af fd ff ff               	call 0x1000 <_init>
0x1251:   48 c1 fd 03                  	sar rbp, 3
0x1255:   74 1f                        	je 0x1276 <__libc_csu_init+0x56>
0x1257:   31 db                        	xor ebx, ebx
0x1259:   0f 1f 80 00 00 00 00         	nop dword ptr [rax]
0x1260:   4c 89 f2                     	mov rdx, r14
0x1263:   4c 89 ee                     	mov rsi, r13
0x1266:   44 89 e7                     	mov edi, r12d
0x1269:   41 ff 14 df                  	call qword ptr [r15 + rbx*8]
0x126d:   48 83 c3 01                  	add rbx, 1
0x1271:   48 39 dd                     	cmp rbp, rbx
0x1274:   75 ea                        	jne 0x1260 <__libc_csu_init+0x40>
0x1276:   48 83 c4 08                  	add rsp, 8
0x127a:   5b                           	pop rbx
0x127b:   5d                           	pop rbp
0x127c:   41 5c                        	pop r12
0x127e:   41 5d                        	pop r13
0x1280:   41 5e                        	pop r14
0x1282:   41 5f                        	pop r15
0x1284:   c3                           	ret 
; data inside code section at 0x1285 -- 0x1290
0x1285:   66 66 2e 0f 1f 84 00 00  00 00 00                  |ff.........     |
; function: __libc_csu_fini at 0x1290 -- 0x1295
0x1290:   f3 0f 1e fa                  	endbr64 
0x1294:   c3                           	ret 
; section: .fini
; function: _fini at 0x1298 -- 0x12a5
0x1298:   f3 0f 1e fa                  	endbr64 
0x129c:   48 83 ec 08                  	sub rsp, 8
0x12a0:   48 83 c4 08                  	add rsp, 8
0x12a4:   c3                           	ret 

;;
;; Data Segment
;;

; section: .interp
0x318:    2f 6c 69 62 36 34 2f 6c  64 2d 6c 69 6e 75 78 2d   |/lib64/ld-linux-|
0x328:    78 38 36 2d 36 34 2e 73  6f 2e 32 00 ??            |x86-64.so.2.?   |
; section: .gnu.hash
0x3a0:    02 00 00 00 07 00 00 00  01 00 00 00 06 00 00 00   |................|
0x3b0:    00 00 81 00 00 00 00 00  07 00 00 00 00 00 00 00   |................|
0x3c0:    d1 65 ce 6d ??                                     |.e.m?           |
; section: .dynsym
0x3c8:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3d8:    00 00 00 00 00 00 00 00  5a 00 00 00 20 00 00 00   |........Z... ...|
0x3e8:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3f8:    0b 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x408:    00 00 00 00 00 00 00 00  1c 00 00 00 12 00 00 00   |................|
0x418:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x428:    32 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |2...............|
0x438:    00 00 00 00 00 00 00 00  76 00 00 00 20 00 00 00   |........v... ...|
0x448:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x458:    85 00 00 00 20 00 00 00  00 00 00 00 00 00 00 00   |.... ...........|
0x468:    00 00 00 00 00 00 00 00  23 00 00 00 22 00 00 00   |........#..."...|
0x478:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x488:    00                                                 |.               |
; section: .dynstr
0x488:    00 6c 69 62 63 2e 73 6f  2e 36 00 5f 5f 73 74 61   |.libc.so.6.__sta|
0x498:    63 6b 5f 63 68 6b 5f 66  61 69 6c 00 70 72 69 6e   |ck_chk_fail.prin|
0x4a8:    74 66 00 5f 5f 63 78 61  5f 66 69 6e 61 6c 69 7a   |tf.__cxa_finaliz|
0x4b8:    65 00 5f 5f 6c 69 62 63  5f 73 74 61 72 74 5f 6d   |e.__libc_start_m|
0x4c8:    61 69 6e 00 47 4c 49 42  43 5f 32 2e 32 2e 35 00   |ain.GLIBC_2.2.5.|
0x4d8:    47 4c 49 42 43 5f 32 2e  34 00 5f 49 54 4d 5f 64   |GLIBC_2.4._ITM_d|
0x4e8:    65 72 65 67 69 73 74 65  72 54 4d 43 6c 6f 6e 65   |eregisterTMClone|
0x4f8:    54 61 62 6c 65 00 5f 5f  67 6d 6f 6e 5f 73 74 61   |Table.__gmon_sta|
0x508:    72 74 5f 5f 00 5f 49 54  4d 5f 72 65 67 69 73 74   |rt__._ITM_regist|
0x518:    65 72 54 4d 43 6c 6f 6e  65 54 61 62 6c 65 00 ??   |erTMCloneTable.?|
; section: .gnu.version
0x528:    00 00 00 00 02 00 03 00  03 00 00 00 00 00 03 00   |................|
0x538:    01                                                 |.               |
; section: .gnu.version_r
0x538:    01 00 02 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x548:    75 1a 69 09 00 00 03 00  44 00 00 00 10 00 00 00   |u.i.....D.......|
0x558:    14 69 69 0d 00 00 02 00  50 00 00 00 00 00 00 00   |.ii.....P.......|
0x568:    b0                                                 |.               |
; section: .rela.dyn
0x568:    b0 3d 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |.=..............|
0x578:    60 11 00 00 00 00 00 00  b8 3d 00 00 00 00 00 00   |`........=......|
0x588:    08 00 00 00 00 00 00 00  20 11 00 00 00 00 00 00   |........ .......|
0x598:    08 40 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |.@..............|
0x5a8:    08 40 00 00 00 00 00 00  d8 3f 00 00 00 00 00 00   |.@.......?......|
0x5b8:    06 00 00 00 01 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5c8:    e0 3f 00 00 00 00 00 00  06 00 00 00 04 00 00 00   |.?..............|
0x5d8:    00 00 00 00 00 00 00 00  e8 3f 00 00 00 00 00 00   |.........?......|
0x5e8:    06 00 00 00 05 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5f8:    f0 3f 00 00 00 00 00 00  06 00 00 00 06 00 00 00   |.?..............|
0x608:    00 00 00 00 00 00 00 00  f8 3f 00 00 00 00 00 00   |.........?......|
0x618:    06 00 00 00 07 00 00 00  00 00 00 00 00 00 00 00   |................|
0x628:    c8                                                 |.               |
; section: .rela.plt
0x628:    c8 3f 00 00 00 00 00 00  07 00 00 00 02 00 00 00   |.?..............|
0x638:    00 00 00 00 00 00 00 00  d0 3f 00 00 00 00 00 00   |.........?......|
0x648:    07 00 00 00 03 00 00 00  00 00 00 00 00 00 00 00   |................|
0x658:    ??                                                 |?               |
; section: .rodata
0x2000:   01 00 02 00                                        |....            |
0x2004:   25 64 0a 00                                        |%d..            |   "%d\n"
0x2008:   01                                                 |.               |
; section: .eh_frame_hdr
0x2008:   01 1b 03 3b 4c 00 00 00  08 00 00 00 18 f0 ff ff   |...;L...........|
0x2018:   80 00 00 00 48 f0 ff ff  a8 00 00 00 58 f0 ff ff   |....H.......X...|
0x2028:   c0 00 00 00 78 f0 ff ff  68 00 00 00 61 f1 ff ff   |....x...h...a...|
0x2038:   d8 00 00 00 80 f1 ff ff  f8 00 00 00 18 f2 ff ff   |................|
0x2048:   18 01 00 00 88 f2 ff ff  60 01 00 00 ??            |........`...?   |
; section: .eh_frame
0x2058:   14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0x2068:   1b 0c 07 08 90 01 00 00  14 00 00 00 1c 00 00 00   |................|
0x2078:   08 f0 ff ff 2f 00 00 00  00 44 07 10 00 00 00 00   |..../....D......|
0x2088:   24 00 00 00 34 00 00 00  90 ef ff ff 30 00 00 00   |$...4.......0...|
0x2098:   00 0e 10 46 0e 18 4a 0f  0b 77 08 80 00 3f 1a 3a   |...F..J..w...?.:|
0x20a8:   2a 33 24 22 00 00 00 00  14 00 00 00 5c 00 00 00   |*3$"........\...|
0x20b8:   98 ef ff ff 10 00 00 00  00 00 00 00 00 00 00 00   |................|
0x20c8:   14 00 00 00 74 00 00 00  90 ef ff ff 20 00 00 00   |....t....... ...|
0x20d8:   00 00 00 00 00 00 00 00  1c 00 00 00 8c 00 00 00   |................|
0x20e8:   81 f0 ff ff 1f 00 00 00  00 45 0e 10 86 02 43 0d   |.........E....C.|
0x20f8:   06 56 0c 07 08 00 00 00  1c 00 00 00 ac 00 00 00   |.V..............|
0x2108:   80 f0 ff ff 89 00 00 00  00 45 0e 10 86 02 43 0d   |.........E....C.|
0x2118:   06 02 80 0c 07 08 00 00  44 00 00 00 cc 00 00 00   |........D.......|
0x2128:   f8 f0 ff ff 65 00 00 00  00 46 0e 10 8f 02 49 0e   |....e....F....I.|
0x2138:   18 8e 03 45 0e 20 8d 04  45 0e 28 8c 05 44 0e 30   |...E. ..E.(..D.0|
0x2148:   86 06 48 0e 38 83 07 47  0e 40 6e 0e 38 41 0e 30   |..H.8..G.@n.8A.0|
0x2158:   41 0e 28 42 0e 20 42 0e  18 42 0e 10 42 0e 08 00   |A.(B. B..B..B...|
0x2168:   10 00 00 00 14 01 00 00  20 f1 ff ff 05 00 00 00   |........ .......|
0x2178:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x3db0:   60 11 00 00 00 00 00 00  20                        |`.......        |
; section: .fini_array
0x3db8:   20 11 00 00 00 00 00 00  01                        | ........       |
; section: .dynamic
0x3dc0:   01 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x3dd0:   0c 00 00 00 00 00 00 00  00 10 00 00 00 00 00 00   |................|
0x3de0:   0d 00 00 00 00 00 00 00  98 12 00 00 00 00 00 00   |................|
0x3df0:   19 00 00 00 00 00 00 00  b0 3d 00 00 00 00 00 00   |.........=......|
0x3e00:   1b 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x3e10:   1a 00 00 00 00 00 00 00  b8 3d 00 00 00 00 00 00   |.........=......|
0x3e20:   1c 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x3e30:   f5 fe ff 6f 00 00 00 00  a0 03 00 00 00 00 00 00   |...o............|
0x3e40:   05 00 00 00 00 00 00 00  88 04 00 00 00 00 00 00   |................|
0x3e50:   06 00 00 00 00 00 00 00  c8 03 00 00 00 00 00 00   |................|
0x3e60:   0a 00 00 00 00 00 00 00  9f 00 00 00 00 00 00 00   |................|
0x3e70:   0b 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x3e80:   15 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3e90:   03 00 00 00 00 00 00 00  b0 3f 00 00 00 00 00 00   |.........?......|
0x3ea0:   02 00 00 00 00 00 00 00  30 00 00 00 00 00 00 00   |........0.......|
0x3eb0:   14 00 00 00 00 00 00 00  07 00 00 00 00 00 00 00   |................|
0x3ec0:   17 00 00 00 00 00 00 00  28 06 00 00 00 00 00 00   |........(.......|
0x3ed0:   07 00 00 00 00 00 00 00  68 05 00 00 00 00 00 00   |........h.......|
0x3ee0:   08 00 00 00 00 00 00 00  c0 00 00 00 00 00 00 00   |................|
0x3ef0:   09 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x3f00:   1e 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x3f10:   fb ff ff 6f 00 00 00 00  01 00 00 08 00 00 00 00   |...o............|
0x3f20:   fe ff ff 6f 00 00 00 00  38 05 00 00 00 00 00 00   |...o....8.......|
0x3f30:   ff ff ff 6f 00 00 00 00  01 00 00 00 00 00 00 00   |...o............|
0x3f40:   f0 ff ff 6f 00 00 00 00  28 05 00 00 00 00 00 00   |...o....(.......|
0x3f50:   f9 ff ff 6f 00 00 00 00  03 00 00 00 00 00 00 00   |...o............|
0x3f60:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3f70:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3f80:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3f90:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3fa0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3fb0:   c0                                                 |.               |
; section: .got
0x3fb0:   c0 3d 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |.=..............|
0x3fc0:   00 00 00 00 00 00 00 00  30 10 00 00 00 00 00 00   |........0.......|
0x3fd0:   40 10 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |@...............|
0x3fe0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ff0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4000:   00                                                 |.               |
; section: .data
0x4000:   00 00 00 00 00 00 00 00  08 40 00 00 00 00 00 00   |.........@......|
0x4010:   00                                                 |.               |
